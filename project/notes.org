* plan for project
  Two test suites:

  Puppet (ruby, rspec mocks), example:

  #+begin_src ruby
describe 'ClassifierUtils' do
  it "logs output from the http connection attempt" do
    # tests and mocks/stubs (raises/returns called on the expectation)
    TCPSocket.expects(:open).raises('no-connection')
    OpenSSL::X509::Certificate.expects(:new).with('certkey').returns(stub('cert'))
    OpenSSL::PKey::RSA.expects(:new).with('certkey', nil).returns(stub('key')

    # tests
    expect { handle.get('/hi') }.to raise_error('no-connection')
    expect(testcase.logger.destination.string).to match(/opening connection to foo/)
  end
end
  #+end_src

  Discourse (ruby, rspec mocks), example:

  #+begin_src ruby
describe CommonPasswords do
  describe '#password_list' do
    it "loads the passwords file if redis doesn't have it" do
      # mocks/stubs
      mock_redis = mock("redis")
      mock_redis.stubs(:exists).returns(false)
      mock_redis.stubs(:scard).returns(0)
      described_class.stubs(:redis).returns(mock_redis)

      # test
      described_class.expects(:load_passwords).returns(['password'])
      list = described_class.password_list
      expect(list).to respond_to(:include?)
    end
  end
end
  #+end_src

* impl.

  write down mocks/stubs
  try to follow some method to compute the documentationg
